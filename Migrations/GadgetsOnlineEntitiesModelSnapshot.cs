// <auto-generated />
using System;
using GadgetsOnline.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GadgetsOnline.Migrations
{
    [DbContext(typeof(GadgetsOnlineEntities))]
    partial class GadgetsOnlineEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GadgetsOnline.Models.Cart", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"), 1L, 1);

                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.HasIndex("ProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("GadgetsOnline.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Latest collection of Mobile Phones",
                            Name = "Mobile Phones"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Latest Laptops in 2022",
                            Name = "Laptops"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Latest Desktops in 2022",
                            Name = "Desktops"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Latest audio devices",
                            Name = "Audio"
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "USB Cables, Mobile chargers and Keyboards etc",
                            Name = "Accessories"
                        });
                });

            modelBuilder.Entity("GadgetsOnline.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GadgetsOnline.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("GadgetsOnline.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductArtUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Name = "Phone 12",
                            Price = 699.00m,
                            ProductArtUrl = "/Content/Images/Mobile/1.jpg"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Name = "Phone 13 Pro",
                            Price = 999.00m,
                            ProductArtUrl = "/Content/Images/Mobile/2.jpg"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Name = "Phone 13 Pro Max",
                            Price = 1199.00m,
                            ProductArtUrl = "/Content/Images/Mobile/3.jpg"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Name = "XTS 13'",
                            Price = 899.00m,
                            ProductArtUrl = "/Content/Images/Laptop/1.jpg"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            Name = "PC 15.5'",
                            Price = 479.00m,
                            ProductArtUrl = "/Content/Images/Laptop/2.jpg"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2,
                            Name = "Notebook 14",
                            Price = 169.00m,
                            ProductArtUrl = "/Content/Images/Laptop/3.jpg"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 3,
                            Name = "The IdeaCenter",
                            Price = 539.00m,
                            ProductArtUrl = "/Content/Images/placeholder.gif"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            Name = "COMP 22-df003w",
                            Price = 389.00m,
                            ProductArtUrl = "/Content/Images/placeholder.gif"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 4,
                            Name = "Bluetooth Headphones Over Ear",
                            Price = 28.00m,
                            ProductArtUrl = "/Content/Images/Headphones/1.png"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 4,
                            Name = "ZX Series ",
                            Price = 10.00m,
                            ProductArtUrl = "/Content/Images/Headphones/2.png"
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 5,
                            Name = "Wireless charger",
                            Price = 9.99m,
                            ProductArtUrl = "/Content/Images/placeholder.gif"
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 5,
                            Name = "Mousepad",
                            Price = 2.99m,
                            ProductArtUrl = "/Content/Images/placeholder.gif"
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 5,
                            Name = "Keyboard",
                            Price = 9.99m,
                            ProductArtUrl = "/Content/Images/placeholder.gif"
                        });
                });

            modelBuilder.Entity("GadgetsOnline.Models.Cart", b =>
                {
                    b.HasOne("GadgetsOnline.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GadgetsOnline.Models.OrderDetail", b =>
                {
                    b.HasOne("GadgetsOnline.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GadgetsOnline.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GadgetsOnline.Models.Product", b =>
                {
                    b.HasOne("GadgetsOnline.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GadgetsOnline.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GadgetsOnline.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("GadgetsOnline.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
